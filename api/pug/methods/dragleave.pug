section.section
  header.section__header
    h3#method-dragleave.section__h3 dragleave(selector, fn[, data, context, once = false])
  div.section__content
    h4.section__h4 Description
    p 绑定 dragleave 代理事件。
    dl.section__dl
      dt.section__dt Since：
      dd.section__dd 1.7.0
    h4.section__h4 Parameters
    h5.section__h4 selector
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p （必须）通过 selector 选择器判定是否触发指定事件类型的事件处理器。
    h5.section__h4 fn
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Function
    p （必须）fn 为事件处理器回调函数。
    h5.section__h4 data
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Object
    p （可选）给事件处理器回调函数传递的数据。
    h5.section__h4 context
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Object | Boolean
    p （可选）事件处理器回调函数的 this 上下文指向：
    ul
      li 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象；
      li 如未指定 context，则事件处理器回调函数的 this 上下文指向为 Emitter 对象；
    h5.section__h4 once
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Boolean
    dl.section__dl
      dt.section__dt Default：
      dd.section__dd false
    p （可选）once 指定事件处理器回调函数是否仅执行一次。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Emitter 对象。
    p Emitter 对象。
    pre.section__pre
      code.section__code.
        const handler = function(evt) {
          const $target = evt.relatedTarget
          console.log(`当前事件的 relatedTarget 是：${$target}`)
        }

        const $emitter = delegate('#list')

        // 类选择器
        $emitter.dragleave('.item', handler)
