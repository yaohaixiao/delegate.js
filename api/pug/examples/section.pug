section#example.section
  header.section__header
    h2.section__title Example
  div.section__content
    p 事件代理最适用的场景就是下面示例中，需要动态创建 DOM 元素，并且还会频繁移除动态创建的 DOM 元素的应用场景。在该场景下，通常不方便，也不会为动态创建的 DOM 节点一一绑定事件处理器。因为在移除 DOM 节点时，如果没有（及时）销毁 DOM 节点绑定的事件处理函数，就会导致事件处理器一直占用内存资源无法释放，从而导致浏览器的内存溢出。
    p 通过事件代理就可以很好的解决前面提到的问题，事件代理是将事件侦听器添加到一个父级元素上，这样就只用添加一次事件侦听器，可以避免向 （父级元素内）很多特定的 DOM 节点添加多个事件侦听器，减少了内存消耗，从而优化程序性能。而这个添加在父元素上的事件侦听器通过事件冒泡的事件流机制以分析查找子元素（选择器）的匹配项。
  include ./case
