/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}progress,sub,sup{vertical-align:baseline}.buttons__item.hide,[hidden],template{display:none}.docs,.main,.section__dl{position:relative;z-index:1}.aside,.docs{-webkit-box-direction:normal}html{-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}.case,.main__cdn{border-top:1px solid #ddd;border-bottom:1px solid #ddd}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}.docs,body,html{overflow:hidden}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}body,html{height:100%;background:#fafafa;color:#333;font-size:14px;line-height:150%;font-family:"Microsoft YaHei UI",Arial,sans-serif}.aside,code{font-family:"Source Code Pro",Consolas,Georgia,Monaco,monospace,Arial,sans-serif}a:hover,a:link,a:visited{color:#058942;text-decoration:none}a:hover{text-decoration:underline}::-webkit-scrollbar{width:7px;height:7px;-webkit-border-radius:5px}.aside,.docs,.main{height:100%}::-webkit-scrollbar-track-piece{-webkit-border-radius:5px}::-webkit-scrollbar-thumb:vertical{background-color:rgba(0,0,0,.1);-webkit-border-radius:5px}::-webkit-scrollbar-thumb:horizontal{background-color:rgba(0,0,0,.1);-webkit-border-radius:5px}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15)}.docs{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:100%;margin:0}.aside,.main{overflow:auto}.aside{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;-webkit-box-orient:vertical;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:230px;margin:0;background-color:#333;color:#ddd;-webkit-box-shadow:0 0 5px 2px #ddd;box-shadow:0 0 5px 2px #ddd}.main{-webkit-box-flex:1;-ms-flex:1;flex:1;background-color:#fff}.aside__header{margin:0 auto;-ms-flex-negative:0;flex-shrink:0;overflow:hidden}.aside__nav{-webkit-box-flex:1;-ms-flex:1;flex:1;overflow:auto}.aside__h2{margin:0 auto;height:54px;line-height:54px;font-size:20px;font-weight:400;font-family:Georgia,Consolas,Arial,sans-serif;text-align:center;overflow:hidden}.aside__h3{margin:0 auto;padding:0 20px;font-size:16px;overflow:hidden}.aside__list{margin:0;padding:10px 0;overflow:hidden}.aside__item{height:32px;line-height:32px;padding:0 30px;cursor:pointer;font-size:13px;overflow:hidden}.aside__item.active,.aside__item:hover{background-color:#555}.aside__item.active{border-left:3px solid #fff}.aside__anchor:link,.aside__anchor:visited{color:#ddd;text-decoration:none}.aside__anchor:hover{color:#ddd;text-decoration:underline}.main__footer,.main__header{margin:0 auto;padding:1em;text-align:center;overflow:hidden}.main__h1{margin:0 auto;padding-top:1em;font-size:5em;font-weight:400;line-height:2em;overflow:hidden}.main__name{color:#1f8dd6;font-weight:400}.main__tagline{margin:1em auto;max-width:660px;line-height:1.3em;font-size:2em;color:#999;font-weight:100;overflow:hidden}.main__cdn{margin:2em 0;padding:2em;font-size:16px;line-height:150%;text-align:center;background-color:#fafafa;color:#666;overflow:hidden}.main__download{margin:1em auto;width:200px;text-align:center;overflow:hidden}.main__button{display:inline-block;border-radius:4px;padding:14px 29px;font-size:18px;font-family:"Source Code Pro",Consolas,Georgia,Monaco,monospace,Arial,sans-serif;background-color:#058942;overflow:hidden}.case__pre,.section__footer,.section__pre{background-color:#fafafa}.main__button:hover,.main__button:link,.main__button:visited{color:#fff;text-decoration:none}.main__footer{margin:0 3em;border-top:1px solid #ddd}.section{margin:1em 0;overflow:hidden}.section__content,.section__footer,.section__header{margin:0 3em;overflow:hidden}.section__title{color:#666}.section__h3{color:#1f8dd6;font-size:1.35em}.section__h4{font-size:1.1em;color:#666}.section__h5{font-size:1em;color:#999}.section__dl{overflow:hidden}.section__dt{position:absolute;z-index:2;top:0;left:0;width:60px;margin:0;overflow:hidden}.case,.section__dd{position:relative;z-index:1}.section__dd{margin:0 0 0 60px;color:#058942;overflow:hidden}.section__pre{margin:2em 0;padding:1em;font-size:14px;line-height:150%;text-align:left;border:1px solid #ddd;border-radius:4px;color:#666;overflow:auto}.section__code{display:block;margin:0 auto;overflow:hidden}.section__footer{border-top:1px solid #ddd;margin-top:3em;color:#999}.case{display:grid;grid-template-columns:repeat(2,1fr);gap:40px;padding:1em;overflow:hidden}.case:after{content:'';position:absolute;z-index:2;top:0;left:50%;height:100%;width:0;border-left:1px solid #ddd;overflow:hidden}.case__pre,.case__textarea{font-size:13px;line-height:150%}.case__code,.case__pre,.case__textarea{font-family:"Courier New",Consolas,Georgia,Arial,sans-serif}.case__pre{margin:0;padding:1em;height:100%;border-radius:4px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:auto}.case__toolbar{margin:0 auto;height:36px;line-height:36px;font-size:14px;padding:0 16px;text-align:right;overflow:hidden}.case__action,.case__remove{cursor:pointer;color:#058942;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.case__action{font-size:13px;padding-left:10px}.case__action:first-child{padding-left:0}.case__remove{float:right}.case__console{margin:0 auto;height:180px;border:1px solid #ddd;overflow:hidden}.case__textarea{margin:0 auto;width:100%;height:100%;border:none;outline:0;padding:1em;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:auto}.case__item,.case__list{margin:0;padding:0;list-style-type:none;overflow:hidden}.case__list{height:360px;border-top:1px solid #ddd;border-bottom:1px solid #ddd;font-size:13px;overflow:auto}.buttons__item,.case__item{height:36px;cursor:pointer}.case__item{line-height:36px;padding:0 16px}.case__item:hover{background-color:#f7f8f9}.buttons{position:fixed;z-index:2;top:50%;right:12px;margin:0;width:56px;-webkit-transform:translateY(-50%);transform:translateY(-50%);overflow:hidden}.buttons__item{position:relative;z-index:1;margin:10px;width:36px;border:1px solid #ddd;border-radius:4px;-webkit-box-shadow:0 0 6px #ddd;box-shadow:0 0 6px #ddd;-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#fff;text-align:center;color:#999;overflow:hidden}.buttons__item:hover{color:#058942}.buttons__anchor:hover,.buttons__anchor:link,.buttons__anchor:visited{color:#999}.buttons__anchor:hover{color:#058942}.buttons__icon{position:absolute;z-index:2;top:50%;left:50%;width:20px;height:20px;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);fill:currentcolor;overflow:hidden}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
